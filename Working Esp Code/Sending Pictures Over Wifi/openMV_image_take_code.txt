#without chunks -- same bytes
import time
import sensor
import image
from pyb import UART

# Initialize the sensor and UART
sensor.reset()  # Initialize the camera sensor
sensor.set_pixformat(sensor.RGB565)  # Set pixel format (can also use sensor.JPEG for JPEG format)
sensor.set_framesize(sensor.QVGA)  # Set frame size (QVGA is 320x240)
sensor.skip_frames(time=2000)  # Wait for sensor to stabilize

# Initialize UART port 1, baudrate 115200
uart = UART(1, 115200)

while True:
    # Take a snapshot every 20 seconds
    print("Taking picture...")
    jpg = sensor.snapshot().compress(quality=10)
    #print(f"Image size: {len(jpg)} bytes ({len(jpg)*8} bits)")
    #print("Sending image to ESP32...")

    for byte in jpg:
        uart.write(bytearray([byte]))
        time.sleep_ms(2)

    # Calculate the size of the image data in bytes and bits
    img_size_bytes = len(jpg)
    img_size_bits = img_size_bytes * 8
    print("Image size: {} bytes ({} bits)".format(img_size_bytes, img_size_bits))

    # Send the image data to the ESP32 via UART
    print("Sending image to ESP32...")
    #uart.write(jpg)  # Send the image as bytes

    # Check if there is any response from the ESP32 (optional)
    if uart.any():
        received_data = uart.read().decode('utf-8')  # Read and decode any response
        print("Received from ESP32:", received_data)

    # Wait for 20 seconds before taking another picture
    time.sleep(60)
